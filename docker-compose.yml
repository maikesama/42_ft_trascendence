version: '3.8'

services:
  
  frontend:
    image: "frontend"
    #user: "node"
    # working_dir: /app
    build: 
      dockerfile: 'Dockerfile'
      context: ./frontend
    volumes:
      - ./frontend/src:/app/src
    expose:
      - "3000"
    ports:
      - "3000:3000"
    # command: sh -c "npm install; npm run build; npm install serve; npx serve -s build"
    # command: "npm install --legacy-peer-deps; react-scripts start;"
    container_name: frontend
    depends_on:
      - "backend"
    networks:
      - trascendecne

  backend:
    image: "backend"
    build: 
      dockerfile: 'Dockerfile'
      context: ./backend
    restart: unless-stopped
    volumes:
      - ./backend/src:/app/src
    expose:
      - "3333"
    ports:
      - "3333:3333"
    container_name: backend
    depends_on:
      - "database"
    networks:
      - trascendecne

  database:
    image: postgres:13
    ports:
      - 5432:5432
    # expose:
    #   - "5432"
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: nest
    networks:
      - trascendecne
  # redis:
  #   image: redis:latest
  #   ports:
  #     - '6379:6379'

  # rcli:
  #   image: redis:latest
  #   links:
  #     - redis
  #   command: redis-cli -h redis

  # proxy:
  #   build: ./proxy
  #   container_name: proxy
  #   ports:
  #     - "80:80"
  #   expose:
  #     - "80"
  #   depends_on:
  #     - "backend"
  #     - "frontend"

# volumes:
  # frontend:
  # backend:
  # database:
  # proxy:

networks:
  trascendecne: